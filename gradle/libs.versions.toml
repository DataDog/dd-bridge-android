[versions]
# Commons
kotlin = "1.5.21"
gson = "2.8.6"
okHttp = "3.12.13"

# Android
androidToolsPlugin = "7.0.3"

# JUnit
jUnitJupiter = "5.6.2"
jUnitPlatform = "1.6.2"
jUnitMockitoExt = "3.4.6"

# Tests Tools
assertJ = "3.18.1"
elmyr = "1.3.1"
mockitoKotlin = "2.2.0"

# Tools
detekt = "1.17.0"
ktLint = "10.2.0"
dokka = "1.4.32"
unmock = "0.7.5"

fuzzyWuzzy = "1.2.0"
mavenModel = "3.6.3"

versionsPluginGradle = "0.27.0"
nexusPublishPluginGradle = "1.1.0"

kotlinGrammarParser = "c35b50fa44"
jsonSchemaValidator = "1.12.1"

# Datadog
datadogSdk = "1.12.0-alpha2"

[libraries]

# Classpaths
# Gradle version catalog doesn't allow names to end with plugin, that is why strange names
androidToolsPluginGradle = { module = "com.android.tools.build:gradle", version.ref = "androidToolsPlugin" }
kotlinPluginGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ktLintPluginGradle = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktLint" }
dokkaPluginGradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
unmockPluginGradle = { module = "de.mobilej.unmock:UnMockPlugin", version.ref = "unmock" }
detektPluginGradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }

versionsPluginGradle = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsPluginGradle" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJ" }

# Junit 5
jUnitPlatform = { module = "org.junit.platform:junit-platform-launcher", version.ref = "jUnitPlatform" }
jUnitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jUnitJupiter" }
jUnitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jUnitJupiter" }
jUnitMockitoExt = { module = "org.mockito:mockito-junit-jupiter", version.ref = "jUnitMockitoExt" }

# Test tools
elmyr = { module = "com.github.xgouchet.Elmyr:core", version.ref = "elmyr" }
elmyrInject = { module = "com.github.xgouchet.Elmyr:inject", version.ref = "elmyr" }
elmyrJUnit5 = { module = "com.github.xgouchet.Elmyr:junit5", version.ref = "elmyr" }
elmyrJVM = { module = "com.github.xgouchet.Elmyr:jvm", version.ref = "elmyr" }
mockitoKotlin = { module = "com.nhaarman.mockitokotlin2:mockito-kotlin", version.ref = "mockitoKotlin" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

datadogSdk = { module = "com.datadoghq:dd-sdk-android", version.ref = "datadogSdk" }

# Tools
detektCli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detektApi = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
detektTest = { module = "io.gitlab.arturbosch.detekt:detekt-test", version.ref = "detekt" }
okHttpMock = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }

fuzzyWuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzyWuzzy" }
mavenModel = { module = "org.apache.maven:maven-model", version.ref = "mavenModel" }
nexusPublishPluginGradle = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "nexusPublishPluginGradle" }

kotlinGrammarParser = { module = "com.github.kotlinx.ast:grammar-kotlin-parser-antlr-kotlin-jvm", version.ref = "kotlinGrammarParser" }
jsonSchemaValidator = { module = "com.github.everit-org.json-schema:org.everit.json.schema", version.ref = "jsonSchemaValidator" }

[bundles]

jUnit5 = [
    "jUnitPlatform",
    "jUnitJupiterApi",
    "jUnitJupiterEngine",
    "jUnitMockitoExt"
]

testTools = [
    "assertJ",
    "elmyr",
    "elmyrInject",
    "elmyrJUnit5",
    "elmyrJVM",
    "mockitoKotlin",
    "kotlinReflect"
]

[plugins]
versionsPluginGradle = { id = "com.github.ben-manes.versions", version.ref = "versionsPluginGradle" }
