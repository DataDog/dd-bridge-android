object com.datadog.android.bridge.DdBridge
  fun getDdSdk(android.content.Context): DdSdk
  fun getDdLogs(android.content.Context): DdLogs
  fun getDdRum(android.content.Context): DdRum
  fun getDdTrace(android.content.Context): DdTrace
interface com.datadog.android.bridge.DdLogs
  fun debug(String, Map<String, Any?>): Unit
  fun info(String, Map<String, Any?>): Unit
  fun warn(String, Map<String, Any?>): Unit
  fun error(String, Map<String, Any?>): Unit
interface com.datadog.android.bridge.DdRum
  fun startView(String, String, Map<String, Any?>, Long): Unit
  fun stopView(String, Map<String, Any?>, Long): Unit
  fun startAction(String, String, Map<String, Any?>, Long): Unit
  fun stopAction(Map<String, Any?>, Long): Unit
  fun addAction(String, String, Map<String, Any?>, Long): Unit
  fun startResource(String, String, String, Map<String, Any?>, Long): Unit
  fun stopResource(String, Long, String, Long, Map<String, Any?>, Long): Unit
  fun addError(String, String, String, Map<String, Any?>, Long): Unit
  fun addTiming(String): Unit
interface com.datadog.android.bridge.DdSdk
  fun initialize(DdSdkConfiguration): Unit
  fun setAttributes(Map<String, Any?>): Unit
  fun setUser(Map<String, Any?>): Unit
  fun setTrackingConsent(String): Unit
class com.datadog.android.bridge.DdSdkConfiguration
  constructor(String, String, String? = null, Boolean? = null, Double? = null, String? = null, String? = null, Map<String, Any?>? = null)
interface com.datadog.android.bridge.DdTrace
  fun startSpan(String, Map<String, Any?>, Long): String
  fun finishSpan(String, Map<String, Any?>, Long): Unit
object com.datadog.android.bridge.internal.NoOpViewTrackingStrategy : com.datadog.android.rum.tracking.ViewTrackingStrategy
  override fun register(android.content.Context)
  override fun unregister(android.content.Context?)
